#Ubuntu 16.04
ssh -i <pem file> ubuntu@<public DNS>
ssh -i atomar08.pem tomar001@ec2-18-221-13-133.us-east-2.compute.amazonaws.com


Update apr-get for Ubuntu:
#https://cloud-gc.readthedocs.io/en/latest/chapter04_developer-#guide/install-basic.html

sudo apt-get update

#Install Python 3.7:
#https://tecadmin.net/install-python-3-7-on-ubuntu-linuxmint/

sudo apt-get install build-essential checkinstall
sudo apt-get install libreadline-gplv2-dev libncursesw5-dev libssl-dev \
    libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev libffi-dev zlib1g-dev

sudo wget https://www.python.org/ftp/python/3.7.4/Python-3.7.4.tgz
sudo tar xzf Python-3.7.4.tgz
cd Python-3.7.4
sudo ./configure --enable-optimizations
sudo make altinstall
cd ..
python3.7 --version

sudo pip3.7 install virtualenv

python3.7 -m venv gitVenv
source gitVenv/bin/activate
pip install --upgrade pip

vi env.sh
#!/bin/bash

export GIT_ACCOUNT_ID='xxxxx@gmail.com'
export GIT_ACCOUNT_KEY='********'


source env.sh
git clone https://github.com/atomar08/repository_metadata_analysis_tool.git
cd repository_metadata_analysis_tool/
pip install -r requirement.txt


#Install RabbitMQ:
#https://www.vultr.com/docs/how-to-install-rabbitmq-on-ubuntu-16-04-47
#https://tecadmin.net/install-rabbitmq-server-on-ubuntu/

sudo apt-get update
sudo apt-get upgrade

echo 'deb http://www.rabbitmq.com/debian/ testing main' | sudo tee /etc/apt/sources.list.d/rabbitmq.list
wget -O- https://www.rabbitmq.com/rabbitmq-release-signing-key.asc | sudo apt-key add -

sudo apt-get install rabbitmq-server


#Using Init –
sudo update-rc.d rabbitmq-server defaults
sudo service rabbitmq-server start
## sudo service rabbitmq-server stop

#Using Systemctl –
sudo systemctl enable rabbitmq-server
sudo systemctl start rabbitmq-server
## sudo systemctl stop rabbitmq-server


#Start the Server:
sudo systemctl start rabbitmq-server.service
sudo systemctl enable rabbitmq-server.service

#Check Status of RabbitMQ:
sudo rabbitmqctl status


#Install MongoDB:
#https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/

wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | sudo apt-key add -

sudo apt-get install gnupg

wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | sudo apt-key add -

echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/4.2 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.2.list


##sudo apt-get install -y mongodb-org=4.0.3 mongodb-org-server=4.0.3 mongodb-org-shell=4.0.3 mongodb-org-mongos=4.0.3 mongodb-org-tools=4.0.3

sudo apt-get update

sudo apt-get install -y mongodb-org

echo "mongodb-org hold" | sudo dpkg --set-selections
echo "mongodb-org-server hold" | sudo dpkg --set-selections
echo "mongodb-org-shell hold" | sudo dpkg --set-selections
echo "mongodb-org-mongos hold" | sudo dpkg --set-selections
echo "mongodb-org-tools hold" | sudo dpkg --set-selections

#Manage MongoDB:
sudo systemctl start mongod
sudo systemctl daemon-reload
sudo systemctl status mongod
sudo systemctl enable mongod

#sudo systemctl stop mongod
#sudo systemctl restart mongod
#sudo apt install mongodb-clients
#mongo


VCM/seetings.py
# Production:
DEBUG = False
ALLOWED_HOSTS = ['*']

CORS_ORIGIN_ALLOW_ALL = True

#CORS_ORIGIN_WHITELIST = (
#    'http://localhost:3000',
#    'http://127.0.0.1:3000',
#)


screen -S celery
cd ~/repository_metadata_analysis_tool
source ../gitVenv/bin/activate
source ../env.sh
celery -A VCM worker -l info

screen -S django-server
cd ~repository_metadata_analysis_tool
source ../gitVenv/bin/activate
source ../env.sh
python manage.py migrate
python manage.py runserver 0.0.0.0:8000



#Front End Application:
#https://create-react-app.dev/docs/adding-custom-environment-variables/
#https://create-react-app.dev/docs/updating-to-new-releases/
#https://tecadmin.net/install-latest-nodejs-npm-on-ubuntu/

sudo apt-get install curl
curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
sudo apt-get install -y nodejs

git clone https://github.com/atomar08/repo_metadata_frontend_app.git
cd repo_metadata_frontend_app/
rm -rf node_modules && npm install

sudo apt-get update
sudo apt-get install nodejs
sudo apt-get install npm


vi .env
REACT_APP_BACKEND_SERVER=http://IP:8000
#process.env.REACT_APP_BACKEND_SERVER 
screen -S frontend
npm start

#UnInstall Node & npm:
#sudo apt-get purge nodejs
#sudo apt-get remove npm


#Application:
#Network & Security:
#Security Groups -->  New Rule:

#InBound:
#HTTP:
#Custom TCP: 8000
#Custom TCP: 3000
#SSH: 22

#OutBound:
#HTTPS: 443
#HTTP: 80


#Final Working:
#curl http://127.0.0.1:8000/git/validate_repository?repo_name=weather_tracker&project_name=atomar08


curl http://localhost:8000/git/get_commits_page?repo_name=weather_tracker&project_name=atomar08&records_per_page=5&page_number=1

CORS:
https://stackoverflow.com/questions/43357687/django-python-rest-framework-no-access-control-allow-origin-header-is-present?rq=1



Extra document:
https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS/Errors/CORSMissingAllowOrigin

https://javascript.info/fetch-crossorigin

https://en.wikipedia.org/wiki/Cross-origin_resource_sharing

https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS
https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers


https://stackoverflow.com/questions/22355540/access-control-allow-origin-in-django-app-when-accessed-with-phonegap

https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers

https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS/Errors/CORSMissingAllowOrigin
















